version: "3.8"
services:
  traefik:
    container_name: traefik
    image: traefik:latest
    restart: on-failure
    ports:
      - 80:80
    networks:
      - radya
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command:
      - "--api=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.radya.dev`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=${TRAEFIK_USER}:${TRAEFIK_PASSWORD}"

  vaulwarden:
    image: vaultwarden/server:alpine
    volumes:
      - vaultwarden:/data
    depends_on:
      - postgres
    networks:
      - radya
    environment:
      DATABASE_URL: 'postgresql://${DB_USERNAME}:${DB_PASSWORD:-secret}@postgres/${DB_DATABASE}'
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "traefik.enable=true"
      - "traefik.docker.network=proxy-network"
      - "traefik.http.routers.backend.rule=Host(`bitwarden.radya.dev`)"
      - "traefik.http.routers.backend.entrypoints=web"
      - "traefik.http.services.backend.loadbalancer.server.port=80"

  postgres:
    image: postgres:15-alpine
    volumes:
      - pgsql:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      PGPASSWORD: '${DB_PASSWORD:-secret}'
      POSTGRES_DB: '${DB_DATABASE}'
      POSTGRES_USER: '${DB_USERNAME}'
      POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
    networks:
      - radya
    labels:
      - "traefik.enable=false"

  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /root/.docker/config.json:/config.json:ro
    command: --interval 60
    environment:
      WATCHTOWER_LABEL_ENABLE: "true"
      WATCHTOWER_CLEANUP: "true"
      WATCHTOWER_ROLLING_RESTART: "true"

networks:
  radya:
    driver: bridge

volumes:
  pgsql:
    driver: local
  vaultwarden:
    driver: local
